---
- name: Create a prod namespace
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: prod
        labels:
          pod-security.kubernetes.io/enforce: privileged # ðŸ˜œ
  tags:
    - services
    - tethys

- name: Create tethys service account
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: tethys
        namespace: prod
  tags:
    - services
    - tethys

- name: Create tethys role # ðŸ˜¬
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: tethys
        namespace: prod
      rules:
        - apiGroups:
            - ""
          resources:
            - "*"
          verbs:
            - "*"
  tags:
    - services
    - tethys

- name: Create tethys service account policy binding
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: tethys
        namespace: prod
      subjects:
        - kind: ServiceAccount
          name: tethys
          namespace: prod
      roleRef:
        kind: Role
        name: tethys
        apiGroup: rbac.authorization.k8s.io
  tags:
    - services
    - tethys

- name: Create tethys service
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: tethys-svc
        namespace: prod
      spec:
        type: ClusterIP
        selector:
          app: tethys
        ports:
          - name: http
            port: 8080
            protocol: TCP
            targetPort: 80
  tags:
    - services
    - tethys

- name: Create tethys ingress
  become: true
  become_user: ubuntu
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: tethys-webapp
        namespace: prod
      spec:
        ingressClassName: haproxy
        rules:
          - host: "tethys.{{ team_number }}.rust.energy"
            http:
              paths:
                - backend:
                    service:
                      name: tethys-svc
                      port:
                        number: 8080
                  path: /
                  pathType: Prefix
  tags:
    - services
    - tethys

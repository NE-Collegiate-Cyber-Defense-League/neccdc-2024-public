---
- name: K8s set hostname
  hosts: ctrl_plane, nodes
  become: true
  vars_files:
    - "../../roles/common.yml"
  tasks:
    - name: Include host setup role
      ansible.builtin.include_role:
        name: "../../roles/hostsetup"
      vars:
        hostsetup_hostname: "{{ hostname }}"
        hostsetup_fqdn: "{{ hostname }}.{{ ipaserver_domain }}"
        hostsetup_timezone: "America/New_York"

    - name: Update Ubuntu password
      ansible.builtin.user:
        name: ubuntu
        password: "{{ 'PASSWORD' | password_hash('sha512') }}"

- name: K8s base
  hosts: ctrl_plane
  become: true
  tasks:
    - name: Create cluster
      ansible.builtin.include_tasks:
        file: "tasks/create_cluster.yaml"

    - name: Setup black team k8s task
      ansible.builtin.include_tasks:
        file: "tasks/k8s_black_team.yaml"
      tags:
        - black-team

    - name: Get join command
      ansible.builtin.shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Set join command
      ansible.builtin.set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- name: Join docker worker node
  hosts: node_1, node_2
  become: true
  vars:
    team_number: "{{ inventory_hostname.split('.')[-3] }}"
    ctrl_plane_ip: "10.{{ team_number }}.192.211"
  tasks:
    - name: TCP port 6443 on master is reachable from worker
      ansible.builtin.wait_for:
        host: "{{ hostvars[ctrl_plane_ip]['ansible_default_ipv4']['address'] }}"
        port: 6443
        timeout: 1

    - name: Join cluster
      ansible.builtin.shell: "{{ hostvars[ctrl_plane_ip].join_command }} --cri-socket unix:///var/run/cri-dockerd.sock >> node_joined.log"
      args:
        chdir: /home/ubuntu
        creates: node_joined.log

- name: Join containerd worker node
  hosts: node_3
  become: true
  vars:
    team_number: "{{ inventory_hostname.split('.')[-3] }}"
    ctrl_plane_ip: "10.{{ team_number }}.192.211"
  tasks:
    - name: TCP port 6443 on master is reachable from worker
      ansible.builtin.wait_for:
        host: "{{ hostvars[ctrl_plane_ip]['ansible_default_ipv4']['address'] }}"
        port: 6443
        timeout: 1

    - name: Join cluster
      ansible.builtin.shell: "{{ hostvars[ctrl_plane_ip].join_command }} --ignore-preflight-errors=FileAvailable--etc-kubernetes-pki-ca.crt,FileAvailable--etc-kubernetes-kubelet.conf,Port-10250"
      args:
        chdir: /home/ubuntu
        creates: node_joined.log
      ignore_errors: true

- name: Kubernetes deployment
  hosts: ctrl_plane
  become: true
  vars:
    team_number: "{{ inventory_hostname.split('.')[-3] }}"
    blue_team_public_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUBMvzUV2gxTSkCasj9WZ223RV9gnGtS53cx4GD5RZ+ec1+PXhPsw2Fwh58kOIF9NpEOc2q5yzmDBaoPWZ9UfYziWi8kGBqOJ2K0ptdZUVgRb5oaCxHbGVZ2kd8S9ykEu/z/OOl+AYTCzCy+nUnj9AcqnOGmDxD7ivj61BiAkj+p4tCm126j/lXbRkrUbjyqmmqBgYKa29J++v6gYoqgfVV8Uv77HXeobm+OSqOkk6xybCQ3SoWGDnxdudy7hEPmlHgi98A/KegRETznHrCF97ZZLEBdVfENg5wYYw60EMmdFH"
  tasks:
    - name: Setup kubernetes services
      ansible.builtin.include_tasks:
        file: "tasks/k8s_services.yaml"
      tags:
        - services
        - ingress
        - argocd
        - falco
        - database
        - code
        - dashboard
        - nextcloud
        - longhorn
        - gitlab_apps
        - tethys
        - dammon
        - filler

- name: K8s cleanup
  hosts: ctrl_plane, nodes
  become: true
  tasks:
    - name: Remove kubeadm config file
      ansible.builtin.file:
        path: '/etc/kubernetes/kubeadm-config.yaml'
        state: absent
      tags:
        - cleanup
